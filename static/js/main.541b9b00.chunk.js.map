{"version":3,"sources":["components/core/FormComponent.js","components/core/LoaderComponent.js","components/core/TaskComponent.js","components/pages/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["FormComponent","nextStep","handleClientInformation","client","handleClearClientInformation","className","htmlFor","type","name","id","value","clientInformation","onChange","phone","mobile","email","country","streetAddress","city","postalCode","onClick","Loader","circleCommonClasses","TaskComponent","prevStep","handleTaskInformation","sendData","handleClearTaskInformation","handleRemoveTaskInformation","user","useState","taskList","setTaskList","index","setIndex","useEffect","Object","keys","taskInformation","length","newTaskList","i","push","TaskInput","indexElement","task","price","count","defaultValue","map","element","concat","pop","axios","post","then","get","responseType","res","pdfBlob","Blob","data","saveAs","Home","step","setStep","setUser","setClient","fetch","method","headers","body","JSON","stringify","response","json","prevClient","event","target","getAttribute","newClientTaskInformation","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.541b9b00.chunk.js","sourcesContent":["const FormComponent = ({\r\n  nextStep,\r\n  handleClientInformation,\r\n  client,\r\n  handleClearClientInformation,\r\n}) => {\r\n  return (\r\n    <div className=\"bg-gray-light rounded-md p8 shadow-lg w-1/2 phone:w-full\">\r\n      <div className=\"mt-2\">\r\n        <div>\r\n          <div>\r\n            <div className=\"px-2 py-1\">\r\n              <h3 className=\"text-3xl font-bold text-center text-black\">\r\n                Client Information\r\n              </h3>\r\n            </div>\r\n          </div>\r\n          <div className=\"\">\r\n            <>\r\n              <div className=\"shadow overflow-hidden\">\r\n                <div className=\"px-4 pb-1\">\r\n                  <div className=\"grid grid-cols-6 gap-3\">\r\n                    <div className=\"col-span-6\">\r\n                      <label htmlFor=\"name\" className=\"form-input-span\">\r\n                        Name\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        className=\"form-input\"\r\n                        value={client.clientInformation?.name ?? \"\"}\r\n                        onChange={handleClientInformation}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"col-span-3\">\r\n                      <label htmlFor=\"phone\" className=\"form-input-span\">\r\n                        Phone\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"phone\"\r\n                        id=\"phone\"\r\n                        className=\"form-input\"\r\n                        value={client.clientInformation?.phone ?? \"\"}\r\n                        onChange={handleClientInformation}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"col-span-3\">\r\n                      <label htmlFor=\"mobile\" className=\"form-input-span\">\r\n                        Mobile\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"mobile\"\r\n                        id=\"mobile\"\r\n                        className=\"form-input\"\r\n                        value={client.clientInformation?.mobile ?? \"\"}\r\n                        onChange={handleClientInformation}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"col-span-6\">\r\n                      <label htmlFor=\"email\" className=\"form-input-span\">\r\n                        Email\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        className=\"form-input\"\r\n                        value={client.clientInformation?.email ?? \"\"}\r\n                        onChange={handleClientInformation}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"col-span-6\">\r\n                      <label htmlFor=\"country\" className=\"form-input-span\">\r\n                        Country\r\n                      </label>\r\n                      <select\r\n                        id=\"country\"\r\n                        name=\"country\"\r\n                        className=\"form-input\"\r\n                        value={client.clientInformation?.country ?? \"Select\"}\r\n                        onChange={handleClientInformation}\r\n                      >\r\n                        <option>Select</option>\r\n                        <option>Spain</option>\r\n                      </select>\r\n                    </div>\r\n\r\n                    <div className=\"col-span-6\">\r\n                      <label\r\n                        htmlFor=\"street-address\"\r\n                        className=\"form-input-span\"\r\n                      >\r\n                        Street address\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"streetAddress\"\r\n                        id=\"street-address\"\r\n                        className=\"form-input\"\r\n                        value={client.clientInformation?.streetAddress ?? \"\"}\r\n                        onChange={handleClientInformation}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"col-span-3\">\r\n                      <label htmlFor=\"city\" className=\"form-input-span\">\r\n                        City\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"city\"\r\n                        id=\"city\"\r\n                        className=\"form-input\"\r\n                        value={client.clientInformation?.city ?? \"\"}\r\n                        onChange={handleClientInformation}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"col-span-3\">\r\n                      <label htmlFor=\"postal-code\" className=\"form-input-span\">\r\n                        Zip / Postal Code\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"postalCode\"\r\n                        id=\"postal-code\"\r\n                        className=\"form-input\"\r\n                        value={client.clientInformation?.postalCode ?? \"\"}\r\n                        onChange={handleClientInformation}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"px-4 py-2 w-full\">\r\n                    <button\r\n                      onClick={nextStep}\r\n                      type=\"submit\"\r\n                      className=\"form-button\"\r\n                    >\r\n                      Next\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"px-4 py-2 w-full\">\r\n                    <button\r\n                      onClick={handleClearClientInformation}\r\n                      type=\"submit\"\r\n                      className=\"form-button bg-red-600 focus:bg-red-500 hover:bg-red-600\"\r\n                    >\r\n                      Clear\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormComponent;\r\n","const Loader = () => {\r\n  let circleCommonClasses = \"h-2.5 w-2.5 bg-current   rounded-full\";\r\n\r\n  return (\r\n    <div className=\"flex\">\r\n      <div className={`${circleCommonClasses} mr-1 animate-bounce`}></div>\r\n      <div className={`${circleCommonClasses} mr-1 animate-bounce200`}></div>\r\n      <div className={`${circleCommonClasses} animate-bounce400`}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import { useEffect, useState } from \"react\";\r\nimport { saveAs } from \"file-saver\";\r\nimport axios from \"axios\";\r\n\r\nconst TaskComponent = ({\r\n  nextStep,\r\n  prevStep,\r\n  handleTaskInformation,\r\n  sendData,\r\n  handleClearTaskInformation,\r\n  handleRemoveTaskInformation,\r\n  client,\r\n  user,\r\n}) => {\r\n  const [taskList, setTaskList] = useState([]);\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const handleAddingToList = () => {\r\n    sendData();\r\n    setIndex(() => index + 1);\r\n    setTaskList(() => taskList.concat(<TaskInput indexElement={index + 1} />));\r\n  };\r\n\r\n  const handleRemoveTask = () => {\r\n    if (taskList.length > 1) {\r\n      let newTaskList = taskList;\r\n      newTaskList.pop();\r\n      setIndex(() => index - 1);\r\n      setTaskList(newTaskList);\r\n      handleRemoveTaskInformation();\r\n    }\r\n  };\r\n\r\n  const handleClearTaskList = () => {\r\n    setIndex(0);\r\n    setTaskList([<TaskInput indexElement={0} />]);\r\n    handleClearTaskInformation();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIndex(0);\r\n    if (Object.keys(client.taskInformation).length > 0) {\r\n      let newTaskList = [];\r\n      for (let i = index; i < Object.keys(client.taskInformation).length; i++) {\r\n        newTaskList.push(\r\n          <TaskInput\r\n            indexElement={i}\r\n            task={client.taskInformation[i]?.task}\r\n            price={client.taskInformation[i]?.price}\r\n            count={client.taskInformation[i]?.count}\r\n          />\r\n        );\r\n      }\r\n      setTaskList(newTaskList);\r\n    } else {\r\n      setTaskList([<TaskInput indexElement={index} />]);\r\n    }\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const createAndDonwloadPdf = () => {\r\n    sendData();\r\n    axios\r\n      .post(\"https://obscure-dawn-33870.herokuapp.com/createPdf\", {\r\n        user: user,\r\n        client: client,\r\n      })\r\n      .then(() =>\r\n        axios.get(\"https://obscure-dawn-33870.herokuapp.com/fetchPdf\", { responseType: \"blob\" })\r\n      )\r\n      .then((res) => {\r\n        const pdfBlob = new Blob([res.data], { type: \"application/pdf\" });\r\n\r\n        saveAs(pdfBlob, \"newPdf.pdf\");\r\n      });\r\n  };\r\n\r\n  const TaskInput = ({ indexElement, task, price, count }) => {\r\n    return (\r\n      <div className=\"grid grid-cols-6 gap-3 py-1 px-2\">\r\n        <div className=\"col-span-4\">\r\n          <label htmlFor=\"task\" className=\"form-input-span phone:text-sm\">\r\n            Task\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"task\"\r\n            id={\"task-\" + indexElement}\r\n            className=\"form-input phone:text-xs\"\r\n            index={indexElement}\r\n            defaultValue={task ?? \"\"}\r\n            onChange={handleTaskInformation}\r\n          />\r\n        </div>\r\n        <div className=\"col-span-1\">\r\n          <label htmlFor=\"price\" className=\"form-input-span phone:text-sm\">\r\n            Price €\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"price\"\r\n            id={\"price-\" + indexElement}\r\n            index={indexElement}\r\n            className=\"form-input phone:text-xs\"\r\n            defaultValue={price ?? \"\"}\r\n            onChange={handleTaskInformation}\r\n          />\r\n        </div>\r\n        <div className=\"col-span-1\">\r\n          <label htmlFor=\"count\" className=\"form-input-span phone:text-sm\">\r\n            Cant.\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"count\"\r\n            id={\"count-\" + indexElement}\r\n            index={indexElement}\r\n            className=\"form-input phone:text-xs\"\r\n            defaultValue={count ?? \"\"}\r\n            onChange={handleTaskInformation}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-light rounded-md p8 shadow-lg w-1/2 phone:w-full\">\r\n      <div className=\"mt-2\">\r\n        <div>\r\n          <div className=\"px-2 py-3\">\r\n            <h3 className=\"text-3xl font-bold text-center text-black\">\r\n              Task Information\r\n            </h3>\r\n          </div>\r\n        </div>\r\n        <div id=\"task-input-list\">\r\n          {taskList.map((element, index) => {\r\n            return <div key={index}>{element}</div>;\r\n          })}\r\n        </div>\r\n        <div>\r\n          <div className=\"px-4 py-2 w-full\">\r\n            <button\r\n              onClick={handleAddingToList}\r\n              type=\"submit\"\r\n              className=\"form-button\"\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n          <div className=\"px-4 py-2 w-full\">\r\n            <button\r\n              onClick={handleRemoveTask}\r\n              type=\"submit\"\r\n              className=\"form-button bg-red-600 focus:bg-red-500 hover:bg-red-600\"\r\n            >\r\n              Remove\r\n            </button>\r\n          </div>\r\n          <div className=\"px-4 py-2 w-full\">\r\n            <button onClick={prevStep} type=\"submit\" className=\"form-button\">\r\n              Back\r\n            </button>\r\n          </div>\r\n          <div className=\"px-4 py-2 w-full\">\r\n            <button\r\n              onClick={createAndDonwloadPdf}\r\n              type=\"submit\"\r\n              className=\"form-button\"\r\n            >\r\n              Download\r\n            </button>\r\n          </div>\r\n          <div className=\"px-4 py-2 w-full\">\r\n            <button\r\n              onClick={handleClearTaskList}\r\n              type=\"submit\"\r\n              className=\"form-button bg-red-600 focus:bg-red-500 hover:bg-red-600\"\r\n            >\r\n              Clear\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskComponent;\r\n","import { useEffect, useState } from \"react\";\nimport FormComponent from \"../../core/FormComponent\";\nimport Loader from \"../../core/LoaderComponent\";\nimport TaskComponent from \"../../core/TaskComponent\";\n\nconst Home = () => {\n  const [step, setStep] = useState(0);\n  const [user, setUser] = useState({});\n  const [client, setClient] = useState({});\n\n  const sendData = () => {\n    fetch(\"https://obscure-dawn-33870.herokuapp.com/postInformation\", {\n      method: \"post\",\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify({\n        user: user,\n        client: client,\n      }),\n    })\n      .then((response) => response.json)\n      .then(() => {});\n  };\n\n  const nextStep = () => {\n    fetch(\"https://obscure-dawn-33870.herokuapp.com/postInformation\", {\n      method: \"post\",\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify({\n        user: user,\n        client: client,\n      }),\n    })\n      .then((response) => response.json)\n      .then(() => {\n        setStep(() => step + 1);\n      });\n  };\n\n  const prevStep = () => {\n    setStep(() => step - 1);\n  };\n\n  useEffect(() => {\n    fetch(\"https://obscure-dawn-33870.herokuapp.com/getInformation\")\n      .then((response) => response.json())\n      .then((response) => {\n        setUser(() => response.user);\n        setClient(() => response.client);\n      });\n  }, []);\n\n  const handleClientInformation = (event) => {\n    let { name, value } = event.target;\n\n    if (value === \"Select\") {\n      value = \"\";\n    }\n\n    setClient((prevClient) => ({\n      ...prevClient,\n      clientInformation: {\n        ...prevClient.clientInformation,\n        [name]: value,\n      },\n    }));\n  };\n\n  const handleClearClientInformation = () => {\n    setClient((prevClient) => ({ ...prevClient, clientInformation: {} }));\n    fetch(\"https://obscure-dawn-33870.herokuapp.com/postInformation\", {\n      method: \"post\",\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify({\n        user: user,\n        client: { ...client, clientInformation: {} },\n      }),\n    }).then((response) => response.json);\n  };\n\n  const handleClearTaskInformation = () => {\n    setClient((prevClient) => ({ ...prevClient, taskInformation: {} }));\n    fetch(\"https://obscure-dawn-33870.herokuapp.com/postInformation\", {\n      method: \"post\",\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify({\n        user: user,\n        client: { ...client, taskInformation: {} },\n      }),\n    }).then((response) => response.json);\n  };\n\n  const handleTaskInformation = (event) => {\n    let { name, value } = event.target;\n    let index = event.target.getAttribute(\"index\");\n\n    setClient((prevClient) => ({\n      ...prevClient,\n      taskInformation: {\n        ...prevClient.taskInformation,\n        [index]: { ...prevClient.taskInformation[index], [name]: value },\n      },\n    }));\n  };\n\n  const handleRemoveTaskInformation = () => {\n    let newClientTaskInformation = client.taskInformation;\n\n    delete newClientTaskInformation[\n      Object.keys(client.taskInformation).length - 1\n    ];\n\n    setClient((prevClient) => ({\n      ...prevClient,\n      taskInformation: newClientTaskInformation,\n    }));\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center\">\n      {step === 0 ? (\n        client ? (\n          <FormComponent\n            client={client}\n            handleClearClientInformation={handleClearClientInformation}\n            handleClientInformation={handleClientInformation}\n            nextStep={nextStep}\n          />\n        ) : (\n          <Loader />\n        )\n      ) : client ? (\n        <TaskComponent\n          nextStep={nextStep}\n          prevStep={prevStep}\n          handleTaskInformation={handleTaskInformation}\n          sendData={sendData}\n          client={client}\n          user={user}\n          handleClearTaskInformation={handleClearTaskInformation}\n          handleRemoveTaskInformation={handleRemoveTaskInformation}\n        />\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import \"./App.css\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/pages/Home/Home\";\n\nfunction App() {\n  return (\n    <div className=\"container pt-1 pb-1\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/factura-es\" component={Home} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}