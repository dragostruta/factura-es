{"version":3,"sources":["components/core/FormComponent.js","components/core/MyDocument.js","components/core/TaskComponent.js","components/pages/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["FormComponent","nextStep","className","htmlFor","type","name","id","autoComplete","onClick","styles","StyleSheet","create","page","flexDirection","backgroundColor","section","margin","padding","flexGrow","MyDocument","size","style","TaskComponent","prevStep","useState","taskList","setTaskList","TaskInput","map","element","index","concat","document","fileName","Home","step","setStep","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.68e8443c.chunk.js","sourcesContent":["const FormComponent = ({ nextStep }) => {\r\n  return (\r\n    <div className=\"bg-gray-light rounded-md p8 shadow-lg w-1/2 phone:w-full\">\r\n      <div className=\"mt-2\">\r\n        <div>\r\n          <div>\r\n            <div className=\"px-2 py-1\">\r\n              <h3 className=\"text-3xl font-bold text-center text-black\">\r\n                Client Information\r\n              </h3>\r\n            </div>\r\n          </div>\r\n          <div className=\"\">\r\n            <>\r\n              <div className=\"shadow overflow-hidden\">\r\n                <div className=\"px-4 pb-1\">\r\n                  <div className=\"grid grid-cols-6 gap-3\">\r\n                    <div className=\"col-span-3\">\r\n                      <label htmlFor=\"first-name\" className=\"form-input-span\">\r\n                        First name\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"first-name\"\r\n                        id=\"first-name\"\r\n                        autoComplete=\"given-name\"\r\n                        className=\"form-input\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"col-span-3\">\r\n                      <label htmlFor=\"first-name\" className=\"form-input-span\">\r\n                        Last name\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"first-name\"\r\n                        id=\"first-name\"\r\n                        autoComplete=\"given-name\"\r\n                        className=\"form-input\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"col-span-6\">\r\n                      <label htmlFor=\"first-name\" className=\"form-input-span\">\r\n                        Email\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"first-name\"\r\n                        id=\"first-name\"\r\n                        autoComplete=\"given-name\"\r\n                        className=\"form-input\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"col-span-6\">\r\n                      <label htmlFor=\"country\" className=\"form-input-span\">\r\n                        Country\r\n                      </label>\r\n                      <select\r\n                        id=\"country\"\r\n                        name=\"country\"\r\n                        autoComplete=\"country-name\"\r\n                        className=\"form-input\"\r\n                      >\r\n                        <option>Spain</option>\r\n                      </select>\r\n                    </div>\r\n\r\n                    <div className=\"col-span-6\">\r\n                      <label htmlFor=\"first-name\" className=\"form-input-span\">\r\n                        Street address\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"first-name\"\r\n                        id=\"first-name\"\r\n                        autoComplete=\"given-name\"\r\n                        className=\"form-input\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"col-span-3\">\r\n                      <label htmlFor=\"first-name\" className=\"form-input-span\">\r\n                        City\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"first-name\"\r\n                        id=\"first-name\"\r\n                        autoComplete=\"given-name\"\r\n                        className=\"form-input\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"col-span-3\">\r\n                      <label htmlFor=\"first-name\" className=\"form-input-span\">\r\n                        Zip / Postal Code\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"first-name\"\r\n                        id=\"first-name\"\r\n                        autoComplete=\"given-name\"\r\n                        className=\"form-input\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex justify-center items-center\">\r\n                  <div className=\"px-4 py-3 pb-6 w-full\">\r\n                    <button\r\n                      onClick={nextStep}\r\n                      type=\"submit\"\r\n                      className=\"form-button\"\r\n                    >\r\n                      Next\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormComponent;\r\n","import React from \"react\";\r\nimport { Page, Text, View, Document, StyleSheet } from \"@react-pdf/renderer\";\r\n\r\n// Create styles\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"#E4E4E4\",\r\n  },\r\n  section: {\r\n    margin: 10,\r\n    padding: 10,\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\n// Create Document Component\r\nconst MyDocument = () => (\r\n  <Document>\r\n    <Page size=\"A4\" style={styles.page}>\r\n      <View style={styles.section}>\r\n        <Text>Section #1</Text>\r\n      </View>\r\n    </Page>\r\n  </Document>\r\n);\r\n\r\nexport default MyDocument;\r\n","import { useState } from \"react\";\r\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\r\nimport MyDocument from \"./MyDocument\";\r\n\r\nconst TaskComponent = ({ nextStep, prevStep }) => {\r\n  const [taskList, setTaskList] = useState([]);\r\n  const handleAddingToList = () => {\r\n    setTaskList(() => taskList.concat(<TaskInput />));\r\n  };\r\n  const TaskInput = () => {\r\n    return (\r\n      <div className=\"grid grid-cols-6 gap-3 py-1 px-2\">\r\n        <div className=\"col-span-4\">\r\n          <label htmlFor=\"first-name\" className=\"form-input-span phone:text-sm\">\r\n            Articol\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"first-name\"\r\n            id=\"first-name\"\r\n            autoComplete=\"given-name\"\r\n            className=\"form-input\"\r\n          />\r\n        </div>\r\n        <div className=\"col-span-1\">\r\n          <label htmlFor=\"first-name\" className=\"form-input-span phone:text-sm\">\r\n            Tarif €\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"first-name\"\r\n            id=\"first-name\"\r\n            autoComplete=\"given-name\"\r\n            className=\"form-input\"\r\n          />\r\n        </div>\r\n        <div className=\"col-span-1\">\r\n          <label htmlFor=\"first-name\" className=\"form-input-span phone:text-sm\">\r\n            Cant.\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"first-name\"\r\n            id=\"first-name\"\r\n            autoComplete=\"given-name\"\r\n            className=\"form-input\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-light rounded-md p8 shadow-lg w-1/2 phone:w-full\">\r\n      <div className=\"mt-2\">\r\n        <div>\r\n          <div className=\"px-2 py-3\">\r\n            <h3 className=\"text-3xl font-bold text-center text-black\">\r\n              Task Information\r\n            </h3>\r\n          </div>\r\n        </div>\r\n        <div id=\"task-input-list\">\r\n          <TaskInput />\r\n          {taskList.map((element, index) => {\r\n            return <div key={index}>{element}</div>;\r\n          })}\r\n        </div>\r\n        <div>\r\n          <div className=\"px-4 py-2 w-full\">\r\n            <button\r\n              onClick={handleAddingToList}\r\n              type=\"submit\"\r\n              className=\"form-button\"\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n          <div className=\"px-4 py-2 w-full\">\r\n            <button onClick={prevStep} type=\"submit\" className=\"form-button\">\r\n              Back\r\n            </button>\r\n          </div>\r\n          <div className=\"px-4 py-2 w-full\">\r\n            <button type=\"submit\" className=\"form-button\">\r\n              <PDFDownloadLink\r\n                document={<MyDocument />}\r\n                fileName=\"somename.pdf\"\r\n              >\r\n                Download\r\n              </PDFDownloadLink>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskComponent;\r\n","import { useState } from \"react\";\r\nimport FormComponent from \"../../core/FormComponent\";\r\nimport TaskComponent from \"../../core/TaskComponent\";\r\n\r\nconst Home = () => {\r\n  const [step, setStep] = useState(0);\r\n\r\n  const nextStep = () => {\r\n    setStep(() => step + 1);\r\n  };\r\n\r\n  const prevStep = () => {\r\n    setStep(() => step - 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center\">\r\n      {step === 0 ? (\r\n        <FormComponent nextStep={nextStep} />\r\n      ) : (\r\n        <TaskComponent nextStep={nextStep} prevStep={prevStep} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/pages/Home/Home\";\n\nfunction App() {\n  return (\n    <div className=\"container pt-1 pb-1\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/factura-es\" component={Home} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}