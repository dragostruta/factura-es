{"version":3,"sources":["components/core/FormComponent.js","components/core/MyDocument.js","components/core/TaskComponent.js","components/pages/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["FormComponent","nextStep","handleClientInformation","client","handleClearClientInformation","className","htmlFor","type","name","id","value","clientInformation","onChange","phone","mobile","email","country","streetAddress","city","postalCode","onClick","styles","StyleSheet","create","page","padding","image","marginBottom","leftColumn","flexDirection","width","paddingTop","paddingRight","footer","fontSize","textAlign","marginTop","borderWidth","borderColor","borderStyle","container","borderBottomWidth","borderBottomColor","borderBottomStyle","alignItems","detailColumn","flexGrow","linkColumn","alignSelf","justifySelf","fontWeight","paddingBottom","subtitle","subtitleName","subtitleDate","Header","user","style","facturalNumber","SubHeader","current","Date","date","getDate","getMonth","getFullYear","MyDocument","size","TaskComponent","prevStep","handleTaskInformation","sendData","handleClearTaskInformation","handleRemoveTaskInformation","useState","taskList","setTaskList","index","setIndex","useEffect","Object","keys","taskInformation","length","newTaskList","i","push","TaskInput","indexElement","map","element","concat","pop","document","fileName","Home","step","setStep","setUser","setClient","fetch","method","headers","body","JSON","stringify","then","response","json","prevClient","event","target","getAttribute","newClientTaskInformation","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bbeb79e8.chunk.js","sourcesContent":["const FormComponent = ({\r\n  nextStep,\r\n  handleClientInformation,\r\n  client,\r\n  handleClearClientInformation,\r\n}) => {\r\n  return (\r\n    <div className=\"bg-gray-light rounded-md p8 shadow-lg w-1/2 phone:w-full\">\r\n      <div className=\"mt-2\">\r\n        <div>\r\n          <div>\r\n            <div className=\"px-2 py-1\">\r\n              <h3 className=\"text-3xl font-bold text-center text-black\">\r\n                Client Information\r\n              </h3>\r\n            </div>\r\n          </div>\r\n          <div className=\"\">\r\n            <>\r\n              <div className=\"shadow overflow-hidden\">\r\n                <div className=\"px-4 pb-1\">\r\n                  <div className=\"grid grid-cols-6 gap-3\">\r\n                    <div className=\"col-span-6\">\r\n                      <label htmlFor=\"name\" className=\"form-input-span\">\r\n                        Name\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        className=\"form-input\"\r\n                        value={client.clientInformation?.name ?? \"\"}\r\n                        onChange={handleClientInformation}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"col-span-3\">\r\n                      <label htmlFor=\"phone\" className=\"form-input-span\">\r\n                        Phone\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"phone\"\r\n                        id=\"phone\"\r\n                        className=\"form-input\"\r\n                        value={client.clientInformation?.phone ?? \"\"}\r\n                        onChange={handleClientInformation}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"col-span-3\">\r\n                      <label htmlFor=\"mobile\" className=\"form-input-span\">\r\n                        Mobile\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"mobile\"\r\n                        id=\"mobile\"\r\n                        className=\"form-input\"\r\n                        value={client.clientInformation?.mobile ?? \"\"}\r\n                        onChange={handleClientInformation}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"col-span-6\">\r\n                      <label htmlFor=\"email\" className=\"form-input-span\">\r\n                        Email\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        className=\"form-input\"\r\n                        value={client.clientInformation?.email ?? \"\"}\r\n                        onChange={handleClientInformation}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"col-span-6\">\r\n                      <label htmlFor=\"country\" className=\"form-input-span\">\r\n                        Country\r\n                      </label>\r\n                      <select\r\n                        id=\"country\"\r\n                        name=\"country\"\r\n                        className=\"form-input\"\r\n                        value={client.clientInformation?.country ?? \"Select\"}\r\n                        onChange={handleClientInformation}\r\n                      >\r\n                        <option>Select</option>\r\n                        <option>Spain</option>\r\n                      </select>\r\n                    </div>\r\n\r\n                    <div className=\"col-span-6\">\r\n                      <label\r\n                        htmlFor=\"street-address\"\r\n                        className=\"form-input-span\"\r\n                      >\r\n                        Street address\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"streetAddress\"\r\n                        id=\"street-address\"\r\n                        className=\"form-input\"\r\n                        value={client.clientInformation?.streetAddress ?? \"\"}\r\n                        onChange={handleClientInformation}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"col-span-3\">\r\n                      <label htmlFor=\"city\" className=\"form-input-span\">\r\n                        City\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"city\"\r\n                        id=\"city\"\r\n                        className=\"form-input\"\r\n                        value={client.clientInformation?.city ?? \"\"}\r\n                        onChange={handleClientInformation}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"col-span-3\">\r\n                      <label htmlFor=\"postal-code\" className=\"form-input-span\">\r\n                        Zip / Postal Code\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"postalCode\"\r\n                        id=\"postal-code\"\r\n                        className=\"form-input\"\r\n                        value={client.clientInformation?.postalCode ?? \"\"}\r\n                        onChange={handleClientInformation}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"px-4 py-2 w-full\">\r\n                    <button\r\n                      onClick={nextStep}\r\n                      type=\"submit\"\r\n                      className=\"form-button\"\r\n                    >\r\n                      Next\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"px-4 py-2 w-full\">\r\n                    <button\r\n                      onClick={handleClearClientInformation}\r\n                      type=\"submit\"\r\n                      className=\"form-button bg-red-600 focus:bg-red-500 hover:bg-red-600\"\r\n                    >\r\n                      Clear\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormComponent;\r\n","import React from \"react\";\r\nimport { Page, Text, View, Document, StyleSheet } from \"@react-pdf/renderer\";\r\n\r\n// Create styles\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    padding: 30,\r\n  },\r\n  image: {\r\n    marginBottom: 10,\r\n  },\r\n  leftColumn: {\r\n    flexDirection: \"column\",\r\n    width: 170,\r\n    paddingTop: 30,\r\n    paddingRight: 15,\r\n    \"@media max-width: 400\": {\r\n      width: \"100%\",\r\n      paddingRight: 0,\r\n    },\r\n    \"@media orientation: landscape\": {\r\n      width: 200,\r\n    },\r\n  },\r\n  footer: {\r\n    fontSize: 12,\r\n    textAlign: \"center\",\r\n    marginTop: 15,\r\n    paddingTop: 5,\r\n    borderWidth: 3,\r\n    borderColor: \"gray\",\r\n    borderStyle: \"dashed\",\r\n    \"@media orientation: landscape\": {\r\n      marginTop: 10,\r\n    },\r\n  },\r\n  container: {\r\n    flexDirection: \"row\",\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: \"#112131\",\r\n    borderBottomStyle: \"solid\",\r\n    alignItems: \"stretch\",\r\n  },\r\n  detailColumn: {\r\n    flexDirection: \"column\",\r\n    flexGrow: 9,\r\n  },\r\n  linkColumn: {\r\n    flexDirection: \"column\",\r\n    flexGrow: 2,\r\n    alignSelf: \"flex-end\",\r\n    justifySelf: \"flex-end\",\r\n  },\r\n  name: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    paddingBottom: 10,\r\n  },\r\n  subtitle: {\r\n    fontSize: 12,\r\n    justifySelf: \"flex-end\",\r\n    paddingBottom: 5,\r\n  },\r\n  subtitleName: {\r\n    fontSize: 10,\r\n    fontWeight: \"bold\",\r\n    justifySelf: \"flex-end\",\r\n    paddingBottom: 10,\r\n    paddingTop: 5,\r\n  },\r\n  subtitleDate: {\r\n    fontSize: 10,\r\n    fontWeight: \"bold\",\r\n    justifySelf: \"flex-end\",\r\n    paddingBottom: 10,\r\n    paddingTop: 10,\r\n  },\r\n});\r\n\r\nconst Header = ({ client, user }) => (\r\n  <View style={styles.container}>\r\n    <View style={styles.detailColumn}>\r\n      <Text style={styles.name}>\r\n        Presupuesto PINTURA{user?.facturalNumber ?? \"-\"}\r\n      </Text>\r\n      <Text style={styles.subtitle}>CLIENTE</Text>\r\n      <Text style={styles.subtitleName}>\r\n        {client?.clientInformation?.name ?? \"Name\"}\r\n      </Text>\r\n      <Text style={styles.subtitle}>\r\n        <Text style={styles.subtitleName}>Teléfono: </Text>\r\n        <Text>{client?.clientInformation?.phone ?? \"-\"}</Text>\r\n      </Text>\r\n      <Text style={styles.subtitle}>\r\n        <Text style={styles.subtitleName}>Móvil: </Text>\r\n        <Text>{client?.clientInformation?.mobile ?? \"-\"}</Text>\r\n      </Text>\r\n    </View>\r\n    <View style={styles.linkColumn}></View>\r\n  </View>\r\n);\r\n\r\nconst SubHeader = () => {\r\n  const current = new Date();\r\n  const date = `${current.getDate()}/${\r\n    current.getMonth() + 1\r\n  }/${current.getFullYear()}`;\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.detailColumn}>\r\n        <Text style={styles.subtitleDate}>FECHA: {date}</Text>\r\n      </View>\r\n      <View style={styles.linkColumn}></View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst Table = () => {\r\n  return <View style={styles.container}></View>;\r\n};\r\n\r\n// Create Document Component\r\nconst MyDocument = ({ client, user }) => {\r\n  return (\r\n    <Document>\r\n      <Page size=\"A4\" style={styles.page}>\r\n        <Header client={client} user={user} />\r\n        <SubHeader />\r\n      </Page>\r\n    </Document>\r\n  );\r\n};\r\n\r\nexport default MyDocument;\r\n","import { useEffect, useState } from \"react\";\r\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\r\nimport MyDocument from \"./MyDocument\";\r\n\r\nconst TaskComponent = ({\r\n  nextStep,\r\n  prevStep,\r\n  handleTaskInformation,\r\n  sendData,\r\n  handleClearTaskInformation,\r\n  handleRemoveTaskInformation,\r\n  client,\r\n  user,\r\n}) => {\r\n  const [taskList, setTaskList] = useState([]);\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const handleAddingToList = () => {\r\n    sendData();\r\n    setIndex(() => index + 1);\r\n    setTaskList(() => taskList.concat(<TaskInput indexElement={index + 1} />));\r\n  };\r\n\r\n  const handleBeforeDownload = () => {\r\n    sendData();\r\n  };\r\n\r\n  const handleRemoveTask = () => {\r\n    if (taskList.length > 1) {\r\n      let newTaskList = taskList;\r\n      newTaskList.pop();\r\n      setIndex(() => index - 1);\r\n      setTaskList(newTaskList);\r\n      handleRemoveTaskInformation();\r\n    }\r\n  };\r\n\r\n  const handleClearTaskList = () => {\r\n    setIndex(0);\r\n    setTaskList([<TaskInput indexElement={0} />]);\r\n    handleClearTaskInformation();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIndex(0);\r\n    if (Object.keys(client.taskInformation).length > 0) {\r\n      let newTaskList = [];\r\n      for (let i = index; i < Object.keys(client.taskInformation).length; i++) {\r\n        newTaskList.push(<TaskInput indexElement={i} />);\r\n      }\r\n      setTaskList(newTaskList);\r\n    } else {\r\n      setTaskList([<TaskInput indexElement={index} />]);\r\n    }\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const TaskInput = ({ indexElement }) => {\r\n    return (\r\n      <div className=\"grid grid-cols-6 gap-3 py-1 px-2\">\r\n        <div className=\"col-span-4\">\r\n          <label htmlFor=\"task\" className=\"form-input-span phone:text-sm\">\r\n            Task\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"task\"\r\n            id={\"task-\" + indexElement}\r\n            className=\"form-input phone:text-xs\"\r\n            index={indexElement}\r\n            // value={client.taskInformation[indexElement]?.task ?? \"\"}\r\n            onChange={handleTaskInformation}\r\n          />\r\n        </div>\r\n        <div className=\"col-span-1\">\r\n          <label htmlFor=\"price\" className=\"form-input-span phone:text-sm\">\r\n            Price €\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"price\"\r\n            id={\"price-\" + indexElement}\r\n            index={indexElement}\r\n            className=\"form-input phone:text-xs\"\r\n            // value={client.taskInformation[indexElement]?.price ?? \"\"}\r\n            onChange={handleTaskInformation}\r\n          />\r\n        </div>\r\n        <div className=\"col-span-1\">\r\n          <label htmlFor=\"count\" className=\"form-input-span phone:text-sm\">\r\n            Cant.\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"count\"\r\n            id={\"count-\" + indexElement}\r\n            index={indexElement}\r\n            className=\"form-input phone:text-xs\"\r\n            // value={client.taskInformation[indexElement]?.count ?? \"\"}\r\n            onChange={handleTaskInformation}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-light rounded-md p8 shadow-lg w-1/2 phone:w-full\">\r\n      <div className=\"mt-2\">\r\n        <div>\r\n          <div className=\"px-2 py-3\">\r\n            <h3 className=\"text-3xl font-bold text-center text-black\">\r\n              Task Information\r\n            </h3>\r\n          </div>\r\n        </div>\r\n        <div id=\"task-input-list\">\r\n          {taskList.map((element, index) => {\r\n            return <div key={index}>{element}</div>;\r\n          })}\r\n        </div>\r\n        <div>\r\n          <div className=\"px-4 py-2 w-full\">\r\n            <button\r\n              onClick={handleAddingToList}\r\n              type=\"submit\"\r\n              className=\"form-button\"\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n          <div className=\"px-4 py-2 w-full\">\r\n            <button\r\n              onClick={handleRemoveTask}\r\n              type=\"submit\"\r\n              className=\"form-button bg-red-600 focus:bg-red-500 hover:bg-red-600\"\r\n            >\r\n              Remove\r\n            </button>\r\n          </div>\r\n          <div className=\"px-4 py-2 w-full\">\r\n            <button onClick={prevStep} type=\"submit\" className=\"form-button\">\r\n              Back\r\n            </button>\r\n          </div>\r\n          <div className=\"px-4 py-2 w-full\">\r\n            <PDFDownloadLink\r\n              document={<MyDocument client={client} user={user} />}\r\n              fileName={\"factura-\" + user.facturalNumber}\r\n              className=\"form-button\"\r\n              onClick={handleBeforeDownload}\r\n            >\r\n              Download\r\n            </PDFDownloadLink>\r\n          </div>\r\n          <div className=\"px-4 py-2 w-full\">\r\n            <button\r\n              onClick={handleClearTaskList}\r\n              type=\"submit\"\r\n              className=\"form-button bg-red-600 focus:bg-red-500 hover:bg-red-600\"\r\n            >\r\n              Clear\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskComponent;\r\n","import { useEffect, useState } from \"react\";\nimport FormComponent from \"../../core/FormComponent\";\nimport TaskComponent from \"../../core/TaskComponent\";\n\nconst Home = () => {\n  const [step, setStep] = useState(0);\n  const [user, setUser] = useState({});\n  const [client, setClient] = useState({});\n\n  const sendData = () => {\n    fetch(\"https://obscure-dawn-33870.herokuapp.com/postInformation\", {\n      method: \"post\",\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify({\n        user: user,\n        client: client,\n      }),\n    })\n      .then((response) => response.json)\n      .then((response) => {});\n  };\n\n  const nextStep = () => {\n    fetch(\"https://obscure-dawn-33870.herokuapp.com/postInformation\", {\n      method: \"post\",\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify({\n        user: user,\n        client: client,\n      }),\n    })\n      .then((response) => response.json)\n      .then((response) => {\n        setStep(() => step + 1);\n      });\n  };\n\n  const prevStep = () => {\n    setStep(() => step - 1);\n  };\n\n  useEffect(() => {\n    fetch(\"https://obscure-dawn-33870.herokuapp.com/getInformation\")\n      .then((response) => response.json())\n      .then((response) => {\n        setUser(() => response.user);\n        setClient(() => response.client);\n      });\n  }, []);\n\n  const handleClientInformation = (event) => {\n    let { name, value } = event.target;\n\n    if (value === \"Select\") {\n      value = \"\";\n    }\n\n    setClient((prevClient) => ({\n      ...prevClient,\n      clientInformation: {\n        ...prevClient.clientInformation,\n        [name]: value,\n      },\n    }));\n  };\n\n  const handleClearClientInformation = () => {\n    setClient((prevClient) => ({ ...prevClient, clientInformation: {} }));\n    fetch(\"https://obscure-dawn-33870.herokuapp.com/postInformation\", {\n      method: \"post\",\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify({\n        user: user,\n        client: { ...client, clientInformation: {} },\n      }),\n    }).then((response) => response.json);\n  };\n\n  const handleClearTaskInformation = () => {\n    setClient((prevClient) => ({ ...prevClient, taskInformation: {} }));\n    fetch(\"https://obscure-dawn-33870.herokuapp.com/postInformation\", {\n      method: \"post\",\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify({\n        user: user,\n        client: { ...client, taskInformation: {} },\n      }),\n    }).then((response) => response.json);\n  };\n\n  const handleTaskInformation = (event) => {\n    let { name, value } = event.target;\n    let index = event.target.getAttribute(\"index\");\n\n    setClient((prevClient) => ({\n      ...prevClient,\n      taskInformation: {\n        ...prevClient.taskInformation,\n        [index]: { ...prevClient.taskInformation[index], [name]: value },\n      },\n    }));\n  };\n\n  const handleRemoveTaskInformation = () => {\n    let newClientTaskInformation = client.taskInformation;\n\n    delete newClientTaskInformation[\n      Object.keys(client.taskInformation).length - 1\n    ];\n\n    setClient((prevClient) => ({\n      ...prevClient,\n      taskInformation: newClientTaskInformation,\n    }));\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center\">\n      {step === 0 ? (\n        <FormComponent\n          client={client}\n          handleClearClientInformation={handleClearClientInformation}\n          handleClientInformation={handleClientInformation}\n          nextStep={nextStep}\n        />\n      ) : (\n        <TaskComponent\n          nextStep={nextStep}\n          prevStep={prevStep}\n          handleTaskInformation={handleTaskInformation}\n          sendData={sendData}\n          client={client}\n          user={user}\n          handleClearTaskInformation={handleClearTaskInformation}\n          handleRemoveTaskInformation={handleRemoveTaskInformation}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import \"./App.css\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/pages/Home/Home\";\n\nfunction App() {\n  return (\n    <div className=\"container pt-1 pb-1\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/factura-es\" component={Home} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}