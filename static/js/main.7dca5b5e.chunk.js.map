{"version":3,"sources":["components/core/FormComponent.js","components/core/MyDocument.js","components/core/TaskComponent.js","components/pages/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["FormComponent","nextStep","handleClientInformation","client","handleClearClientInformation","className","htmlFor","type","name","id","value","clientInformation","firstName","onChange","lastName","email","country","streetAddress","city","postalCode","onClick","styles","StyleSheet","create","page","flexDirection","backgroundColor","section","margin","padding","flexGrow","MyDocument","size","style","TaskComponent","prevStep","handleTaskInformation","sendData","handleClearTaskInformation","handleRemoveTaskInformation","useState","taskList","setTaskList","index","setIndex","useEffect","TaskInput","indexElement","map","element","concat","length","newTaskList","pop","document","fileName","Home","step","setStep","user","setUser","setClient","fetch","method","headers","body","JSON","stringify","then","response","json","prevClient","event","target","getAttribute","taskInformation","newClientTaskInformation","Object","keys","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7dca5b5e.chunk.js","sourcesContent":["const FormComponent = ({\r\n  nextStep,\r\n  handleClientInformation,\r\n  client,\r\n  handleClearClientInformation,\r\n}) => {\r\n  return (\r\n    <div className=\"bg-gray-light rounded-md p8 shadow-lg w-1/2 phone:w-full\">\r\n      <div className=\"mt-2\">\r\n        <div>\r\n          <div>\r\n            <div className=\"px-2 py-1\">\r\n              <h3 className=\"text-3xl font-bold text-center text-black\">\r\n                Client Information\r\n              </h3>\r\n            </div>\r\n          </div>\r\n          <div className=\"\">\r\n            <>\r\n              <div className=\"shadow overflow-hidden\">\r\n                <div className=\"px-4 pb-1\">\r\n                  <div className=\"grid grid-cols-6 gap-3\">\r\n                    <div className=\"col-span-3\">\r\n                      <label htmlFor=\"first-name\" className=\"form-input-span\">\r\n                        First name\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"firstName\"\r\n                        id=\"first-name\"\r\n                        className=\"form-input\"\r\n                        value={client.clientInformation?.firstName ?? \"\"}\r\n                        onChange={handleClientInformation}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"col-span-3\">\r\n                      <label htmlFor=\"last-name\" className=\"form-input-span\">\r\n                        Last name\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"lastName\"\r\n                        id=\"last-name\"\r\n                        className=\"form-input\"\r\n                        value={client.clientInformation?.lastName ?? \"\"}\r\n                        onChange={handleClientInformation}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"col-span-6\">\r\n                      <label htmlFor=\"email\" className=\"form-input-span\">\r\n                        Email\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        className=\"form-input\"\r\n                        value={client.clientInformation?.email ?? \"\"}\r\n                        onChange={handleClientInformation}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"col-span-6\">\r\n                      <label htmlFor=\"country\" className=\"form-input-span\">\r\n                        Country\r\n                      </label>\r\n                      <select\r\n                        id=\"country\"\r\n                        name=\"country\"\r\n                        className=\"form-input\"\r\n                        value={client.clientInformation?.country ?? \"Select\"}\r\n                        onChange={handleClientInformation}\r\n                      >\r\n                        <option>Select</option>\r\n                        <option>Spain</option>\r\n                      </select>\r\n                    </div>\r\n\r\n                    <div className=\"col-span-6\">\r\n                      <label\r\n                        htmlFor=\"street-address\"\r\n                        className=\"form-input-span\"\r\n                      >\r\n                        Street address\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"streetAddress\"\r\n                        id=\"street-address\"\r\n                        className=\"form-input\"\r\n                        value={client.clientInformation?.streetAddress ?? \"\"}\r\n                        onChange={handleClientInformation}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"col-span-3\">\r\n                      <label htmlFor=\"city\" className=\"form-input-span\">\r\n                        City\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"city\"\r\n                        id=\"city\"\r\n                        className=\"form-input\"\r\n                        value={client.clientInformation?.city ?? \"\"}\r\n                        onChange={handleClientInformation}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"col-span-3\">\r\n                      <label htmlFor=\"postal-code\" className=\"form-input-span\">\r\n                        Zip / Postal Code\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"postalCode\"\r\n                        id=\"postal-code\"\r\n                        className=\"form-input\"\r\n                        value={client.clientInformation?.postalCode ?? \"\"}\r\n                        onChange={handleClientInformation}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"px-4 py-2 w-full\">\r\n                    <button\r\n                      onClick={nextStep}\r\n                      type=\"submit\"\r\n                      className=\"form-button\"\r\n                    >\r\n                      Next\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"px-4 py-2 w-full\">\r\n                    <button\r\n                      onClick={handleClearClientInformation}\r\n                      type=\"submit\"\r\n                      className=\"form-button bg-red-600 focus:bg-red-500 hover:bg-red-600\"\r\n                    >\r\n                      Clear\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormComponent;\r\n","import React from \"react\";\r\nimport { Page, Text, View, Document, StyleSheet } from \"@react-pdf/renderer\";\r\n\r\n// Create styles\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"#E4E4E4\",\r\n  },\r\n  section: {\r\n    margin: 10,\r\n    padding: 10,\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\n// Create Document Component\r\nconst MyDocument = () => (\r\n  <Document>\r\n    <Page size=\"A4\" style={styles.page}>\r\n      <View style={styles.section}>\r\n        <Text>Section #1</Text>\r\n      </View>\r\n    </Page>\r\n  </Document>\r\n);\r\n\r\nexport default MyDocument;\r\n","import { useEffect, useState } from \"react\";\r\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\r\nimport MyDocument from \"./MyDocument\";\r\n\r\nconst TaskComponent = ({\r\n  nextStep,\r\n  prevStep,\r\n  handleTaskInformation,\r\n  sendData,\r\n  handleClearTaskInformation,\r\n  handleRemoveTaskInformation,\r\n}) => {\r\n  const [taskList, setTaskList] = useState([]);\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const handleAddingToList = () => {\r\n    sendData();\r\n    setIndex(() => index + 1);\r\n    setTaskList(() => taskList.concat(<TaskInput indexElement={index + 1} />));\r\n  };\r\n\r\n  const handleRemoveTask = () => {\r\n    if (taskList.length > 1) {\r\n      let newTaskList = taskList;\r\n      newTaskList.pop();\r\n      setIndex(() => index - 1);\r\n      setTaskList(newTaskList);\r\n      handleRemoveTaskInformation();\r\n    }\r\n  };\r\n\r\n  const handleTaskList = () => {\r\n    setIndex(0);\r\n    setTaskList([<TaskInput indexElement={0} />]);\r\n    handleClearTaskInformation();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIndex(0);\r\n    setTaskList([<TaskInput indexElement={0} />]);\r\n  }, []);\r\n\r\n  const TaskInput = ({ indexElement }) => {\r\n    return (\r\n      <div className=\"grid grid-cols-6 gap-3 py-1 px-2\">\r\n        <div className=\"col-span-4\">\r\n          <label htmlFor=\"article\" className=\"form-input-span phone:text-sm\">\r\n            Task\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"article\"\r\n            className=\"form-input phone:text-xs\"\r\n            index={indexElement}\r\n            onChange={handleTaskInformation}\r\n          />\r\n        </div>\r\n        <div className=\"col-span-1\">\r\n          <label htmlFor=\"price\" className=\"form-input-span phone:text-sm\">\r\n            Price €\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"price\"\r\n            index={indexElement}\r\n            className=\"form-input phone:text-xs\"\r\n            onChange={handleTaskInformation}\r\n          />\r\n        </div>\r\n        <div className=\"col-span-1\">\r\n          <label htmlFor=\"count\" className=\"form-input-span phone:text-sm\">\r\n            Cant.\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"count\"\r\n            index={indexElement}\r\n            className=\"form-input phone:text-xs\"\r\n            onChange={handleTaskInformation}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-light rounded-md p8 shadow-lg w-1/2 phone:w-full\">\r\n      <div className=\"mt-2\">\r\n        <div>\r\n          <div className=\"px-2 py-3\">\r\n            <h3 className=\"text-3xl font-bold text-center text-black\">\r\n              Task Information\r\n            </h3>\r\n          </div>\r\n        </div>\r\n        <div id=\"task-input-list\">\r\n          {taskList.map((element, index) => {\r\n            return <div key={index}>{element}</div>;\r\n          })}\r\n        </div>\r\n        <div>\r\n          <div className=\"px-4 py-2 w-full\">\r\n            <button\r\n              onClick={handleAddingToList}\r\n              type=\"submit\"\r\n              className=\"form-button\"\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n          <div className=\"px-4 py-2 w-full\">\r\n            <button\r\n              onClick={handleRemoveTask}\r\n              type=\"submit\"\r\n              className=\"form-button bg-red-600 focus:bg-red-500 hover:bg-red-600\"\r\n            >\r\n              Remove\r\n            </button>\r\n          </div>\r\n          <div className=\"px-4 py-2 w-full\">\r\n            <button onClick={prevStep} type=\"submit\" className=\"form-button\">\r\n              Back\r\n            </button>\r\n          </div>\r\n          <div className=\"px-4 py-2 w-full\">\r\n            <button type=\"submit\" className=\"form-button\">\r\n              <PDFDownloadLink\r\n                document={<MyDocument />}\r\n                fileName=\"somename.pdf\"\r\n              >\r\n                Download\r\n              </PDFDownloadLink>\r\n            </button>\r\n          </div>\r\n          <div className=\"px-4 py-2 w-full\">\r\n            <button\r\n              onClick={handleTaskList}\r\n              type=\"submit\"\r\n              className=\"form-button bg-red-600 focus:bg-red-500 hover:bg-red-600\"\r\n            >\r\n              Clear\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskComponent;\r\n","import { useEffect, useState } from \"react\";\r\nimport FormComponent from \"../../core/FormComponent\";\r\nimport TaskComponent from \"../../core/TaskComponent\";\r\n\r\nconst Home = () => {\r\n  const [step, setStep] = useState(0);\r\n  const [user, setUser] = useState({});\r\n  const [client, setClient] = useState({});\r\n\r\n  const sendData = () => {\r\n    fetch(\"https://obscure-dawn-33870.herokuapp.com/postInformation\", {\r\n      method: \"post\",\r\n      headers: { \"Content-type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user: user,\r\n        client: client,\r\n      }),\r\n    })\r\n      .then((response) => response.json)\r\n      .then((response) => {});\r\n  };\r\n\r\n  const nextStep = () => {\r\n    fetch(\"https://obscure-dawn-33870.herokuapp.com/postInformation\", {\r\n      method: \"post\",\r\n      headers: { \"Content-type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user: user,\r\n        client: client,\r\n      }),\r\n    })\r\n      .then((response) => response.json)\r\n      .then((response) => {\r\n        setStep(() => step + 1);\r\n      });\r\n  };\r\n\r\n  const prevStep = () => {\r\n    setStep(() => step - 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://obscure-dawn-33870.herokuapp.com/getInformation\")\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setUser(() => response.user);\r\n        setClient(() => response.client);\r\n      });\r\n  }, []);\r\n\r\n  const handleClientInformation = (event) => {\r\n    let { name, value } = event.target;\r\n\r\n    if (value === \"Select\") {\r\n      value = \"\";\r\n    }\r\n\r\n    setClient((prevClient) => ({\r\n      ...prevClient,\r\n      clientInformation: {\r\n        ...prevClient.clientInformation,\r\n        [name]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleClearClientInformation = () => {\r\n    setClient((prevClient) => ({ ...prevClient, clientInformation: {} }));\r\n    fetch(\"https://obscure-dawn-33870.herokuapp.com/postInformation\", {\r\n      method: \"post\",\r\n      headers: { \"Content-type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user: user,\r\n        client: { ...client, clientInformation: {} },\r\n      }),\r\n    }).then((response) => response.json);\r\n  };\r\n\r\n  const handleClearTaskInformation = () => {\r\n    setClient((prevClient) => ({ ...prevClient, taskInformation: {} }));\r\n    fetch(\"https://obscure-dawn-33870.herokuapp.com/postInformation\", {\r\n      method: \"post\",\r\n      headers: { \"Content-type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user: user,\r\n        client: { ...client, taskInformation: {} },\r\n      }),\r\n    }).then((response) => response.json);\r\n  };\r\n\r\n  const handleTaskInformation = (event) => {\r\n    let { name, value } = event.target;\r\n    let index = event.target.getAttribute(\"index\");\r\n\r\n    setClient((prevClient) => ({\r\n      ...prevClient,\r\n      taskInformation: {\r\n        ...prevClient.taskInformation,\r\n        [index]: { ...prevClient.taskInformation[index], [name]: value },\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleRemoveTaskInformation = () => {\r\n    let newClientTaskInformation = client.taskInformation;\r\n\r\n    delete newClientTaskInformation[\r\n      Object.keys(client.taskInformation).length - 1\r\n    ];\r\n\r\n    setClient((prevClient) => ({\r\n      ...prevClient,\r\n      taskInformation: newClientTaskInformation,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center\">\r\n      {step === 0 ? (\r\n        <FormComponent\r\n          client={client}\r\n          handleClearClientInformation={handleClearClientInformation}\r\n          handleClientInformation={handleClientInformation}\r\n          nextStep={nextStep}\r\n        />\r\n      ) : (\r\n        <TaskComponent\r\n          nextStep={nextStep}\r\n          prevStep={prevStep}\r\n          handleTaskInformation={handleTaskInformation}\r\n          sendData={sendData}\r\n          handleClearTaskInformation={handleClearTaskInformation}\r\n          handleRemoveTaskInformation={handleRemoveTaskInformation}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/pages/Home/Home\";\n\nfunction App() {\n  return (\n    <div className=\"container pt-1 pb-1\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/factura-es\" component={Home} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}